package learnGraph;

import java.util.Arrays;
import java.util.PriorityQueue;
import learnGraph.*;
import java.util.stream.*;
/**
 * 适用于无负值的加权有向图
 */
public class DijkstraSp {
	private PriorityQueue<Integer> pq;
	private double[] distTo;
	private DiEdge[] edgeTo;
	
	public DijkstraSp(EdgeWeightedDiGraph g,int s) {
		distTo = new double[g.V()];
		edgeTo = new DiEdge[g.V()];
		pq = new PriorityQueue<>((a,b)-> Double.compare(distTo[a], distTo[b]));
		for(int i=0;i<g.V();i++)
			distTo[i] = Double.POSITIVE_INFINITY;
		
	}
	
	private void relax(EdgeWeightedDiGraph g, int s) {
		for(DiEdge e:g.iterator(s)) {
			int to = e.to();
			if(distTo[to]>distTo[s]+e.getWeight()) {
				distTo[to] = distTo[s]+e.getWeight();
				
			}
		}
	}
}
