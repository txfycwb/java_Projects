package learnString;

/**
 * 数据压缩：利用原有数据的冗余信息，压缩方法与效率取决于原数据的结果：
 * 1 小规模字母表
 * 2 较长的连续相同的位或字符————游程编码：短游程少。
 * 3 频繁使用的字符————霍夫曼编码
 * 4 较长的连续重复的位或字符————
 * @author guo
 *
 */
public class Compress {

}

/**
	LZW压缩算法：将输入的变长模式生长为定长的编码编译表。 
	核心：维持和生成一张字符串和字符的编译表。重点：最长前缀匹配，使用单词查找树。
 */