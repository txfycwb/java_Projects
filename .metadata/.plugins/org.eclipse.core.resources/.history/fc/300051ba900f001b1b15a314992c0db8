package learnGraph;
import java.util.Stack;

import learnGraph.*;
/**
 * 寻找有向图g中的强连通分量：
 * 1 得到g的逆图的逆后序
 * 2 按照该逆后序对g进行dfs
 * 3 按照对无向图cc的方法找强连通分量
 * @author guo
 * 证明：
 * 1 证明强连通分量中的点一定能在dfs中访问
 * 2 证明dfs中访问的点一定在强连通分量中。
 */
public class KosarajuSCC {
	private int count;
	private int[] id;
	private boolean[] marked;
	public KosarajuSCC(DirectedGraph g) {
		super();
		this.id = new int[g.V()];
		this.marked = new boolean[g.V()];
		Stack<Integer> s = (Stack<Integer>) new Toplogical(g.reverse()).order();
		while(!s.empty()) {
			dfs(g,s.pop());
			count++;
		}
			
		
	}
	private void dfs(DirectedGraph g, Integer s) {
		marked[s] = true;
		for(int i:g.iterator(s)) {
			if(!marked[i]) {
				dfs(g, i);
			}
		}
	}
	
}
