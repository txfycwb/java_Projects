package learnGraph;
import java.util.*;
import learnGraph.*;
/**
 * 拓扑排序即为dfs的逆后序
 * @author guo
 *
 */
public class Toplogical {

}

class DepthFirstOrder{
	private boolean[] marked;
	private Queue<Integer> pre;
	private Queue<Integer> post;
	private Stack<Integer> reversePost;
	
	public DepthFirstOrder(DirectedGraph g) {
		super();
		this.pre = new LinkedList<Integer>();
		this.post = new LinkedList<Integer>();
		this.reversePost = new Stack<Integer>();
		marked = new boolean[g.V()];
		for(int i=0;i<g.V();i++)
			dfs(g, i);
	}
	
	private void dfs(DirectedGraph g, int i) {
		pre.offer(i);
		marked[i] = true;
		for(int d:g.iterator(i)) {
			if(!marked[d]) {
				dfs(g, d);
			}
		}
		post.offer(i);
		reversePost.push(i);
	}
	
	public Iterable<Integer> pre(){
		return pre;
	}
	public Iterable<Integer> post(){
		return post;
	}
	public Iterable<Integer> reversPost(){
		return reversPost();
	}
}